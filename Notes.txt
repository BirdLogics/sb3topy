TODO List
Global variables
Reverse initial layering
Rotation styles
Sounds
When key pressed
Custom blocks
Clones
Pen
Variable reporters
List reporters
GUI
EXE conversion

classes

Runtime
 - display
 - util
 - stage
 - sprites

BlockUtil
 - down_keys
 - targets
 - variables
 - lists
 - cache
 - timer

Display
 - screen
 - scale
 - rect

Target
 - sprite
 - hats
 - clones






=================================================
Event Model (per sprite):
self.events = {
    "broadcast1": [func1, func2, ...],
    "green_flag": [func3, func4, ...]
}

specmap.py
 Contains code to be copied by generator
engine.py
 Contains files to be used by generated scripts
parser.py
 Parses sb3 and generates python

Parser
Parses into this format:

class Block
 opcode
 uuid
 parameters = {}
 code = ""

{
    
}

Queue item:



[
    {
        "opcode": "greenflagclicked",
        "uuid": "asfidfdskjnakjnasdkjfnlskjd",
        "parameters": {
            "SUBSTACK": [
                {
                    "opcode": "motion_move",
                    "uuid": "mbkmkmzkxmalcxzvmkl",
                    "parameters": {
                        "STEPS": 10
                    }
                },
                {
                    "opcode": "control_repeattimes",
                    "uuid"; "dajdfslslvcvxz",
                    "parameters": {
                        "TIMES": 10,
                        "SUBSTACK": [ // List= indent, dict= no indent? No longer could detect using SUBSTACK
                            {
                                "opcode": "motion_rotatecw",
                                "uuid": "kjfandskjfnds",
                                "parameters": {
                                    "DEGREES": 5
                                },
                                "code": "self.direction += DEGREES"
                            }
                        ]
                    },
                    "code": "for _ in range(TIMES):\n    SUBSTACK" // re.sub(" +(SUBSTACK)", SUBSTACK, indented_code)
                }
            ]
        }
    }
]

green_flag
move 10
repeat 10
 rotate 5


parse_script
 current: the current dict block
   - Only contains uid before parsing
   - Also contains parameters afterwards


Parsing stages:
  Queue parameters and substacks
  Textify


Parameters:
 {

 }

Substack:
[

]


=================================================
Unique naming


Already Named dict: {
    "custom block proccode %s": ["customBlock", 1],
    "greenFlag": [""]
}

Names List: [
    "customBlock",
    "greenFlag",
    "greenFlag2"
]



iter = itertools.permutations([''] * 3 + list("ABCDEFGHIJKLMNOPQRSTUVWXYZ"), 4)
for i in iter:
    print(''.join(i)) # A, B, C, ... AA, AB, AB, etc. 18278 possibilities


Key for input types

[1, Value] Wrapper for other values
[2, BlockId] Substack, condition
[3, Value1, Value2] Input covered /w blocks

[4, Float] Most numbers
[5, UFloat] Time wait
[6, UInteger] Letter of, repeat x
[7, Integer] Go back layers, list item
[8, Float angle] Point in direction, angle menu
[9, Hex color] Pen color, touching color
[10, String] Most strings, can be # type for set var

[11, Name, BroadcastId] Broadcast blocks
[12, Name, VariableId, (x), (y)] Variable reporter
[13, Name, VariableId, (x), (y)]
